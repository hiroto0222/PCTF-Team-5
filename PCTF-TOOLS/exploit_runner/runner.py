import swpag_client
import json
import subprocess
import time
import logging
from os import listdir
from os.path import isfile, join

CONFIG_PATH = "./config.json"
LOGGING_FORMAT = "%(asctime)s %(levelname)s: %(message)s"

def load_config():
    config = {}
    with open(CONFIG_PATH, "r") as fin:
        data = json.load(fin)
        config = data
    return config

def main():
    logging.basicConfig(level=logging.DEBUG, filename="./logs/runner_{}.log".format(time.strftime("%Y%m%d_%H%M%S")), filemode="w", format=LOGGING_FORMAT)
    logging.info("Starting runner")

    config = load_config()
    team = swpag_client.Team(config["team_url"], config["team_token"])

    while True:
        tick_info = team.get_tick_info()
        if (tick_info['approximate_seconds_left'] > 10):
            time.sleep(5)
            continue
        time.sleep(tick_info['approximate_seconds_left'] + 5)

        logging.info("Starting tick {}".format(tick_info["tick_id"]))
        config = load_config()

        exploits = [f for f in listdir(config["modules_path"]) if isfile(join(config["modules_path"], f)) and f.startswith(config["exp_prefix"])]
        for exploit in exploits:
            for target in config["targets"]:
                logging.info("Running {} on {}".format(exploit, target))
                subprocess.Popen(config["python_path"] + " ./" + config["modules_path"] + exploit + " " + target)
    
if __name__ == "__main__":
    main()